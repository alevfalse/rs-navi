<!doctype html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">

    <meta name="keywords" content="boarding, house, apartments, dormitories, condominiums, school, address, accessibility">
    <meta name="description" content="Find available places to live near your school.">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.1/css/all.min.css" integrity="sha256-7rF6RaSKyh16288E3hVdzQtHyzatA2MQRGu0cf6pqqM=" crossorigin="anonymous" />

    <!-- Custom CSS -->
    <link rel="stylesheet" type="text/css" href="/css/index.css" >
    
    <title>RS Navi</title>
</head>
<body>

    <!-- Navbar Component -->
    <% include ../public/components/navbar.ejs %>
    
    <% if (locals.message) { 
        if (message.length > 0) { %>
            <!-- Alert Message From Server -->
            <div class="container">
                <div class="row justify-content-center">
                    <div class="alert alert-primary alert-dismissible fade show mt-5" role="alert">
                        <%= locals.message %>
                        <button type="button" class="close" place-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
            </div>
        <% } %>
    <% } %>

    <!-- Search -->
    <main class="container">
        
        <section class="row justify-content-center collapse show" id="logoSection">
            <div class="col-5 col-md-4 col-lg-3">
                <a href="/"><img class="img-fluid" src="/images/logo_no_title.png" id="logo"></a>
            </div>
        </section>

        <form>
            <div class="row justify-content-center">
                <div class="col-10 col-md-8 col-lg-6">
                    <div class="input-group mt-5 mb-3">
                        <input type="text" class="form-control" placeholder="Enter school name..." name="schoolName"  id="searchField" required>
                        <div class="input-group-append">
                            <span class="btn btn-primary"> <i class="fas fa-search"></i> </button>
                       </div>    
                    </div>
                </div>
            </div>
        </form> 
        
        <section class="container collapse text-center" id="mapSection">
            <div id="map" class="border border-primary"></div>
        </section>
        

    </main>

    <!-- Footer Component -->
    <% include ../public/components/footer.ejs %>

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.3.1.js" integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60=" crossorigin="anonymous"></script>
    <!-- Boostrap Bundle (Bootstrap JS + Popper.js) -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js" integrity="sha384-xrRywqdh3PHs8keKZN+8zzc5TX0GRTLCcmivcbNJWm2rs5C8PRhcEn3czEjhAO9o" crossorigin="anonymous"></script>
    <!-- Devbridge's Autocomplete -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.devbridge-autocomplete/1.4.9/jquery.autocomplete.js" integrity="sha256-AU6mjGKtdyPqKOpEqQm/UCFmQ9UqrP1QH0EZVvpoAnQ=" crossorigin="anonymous"></script> 

    <!-- Custom Script -->
    <script src="/js/index.js"></script>
    <script>

        /*
        $("form").submit(function(event) {
            event.preventDefault();
            event.stopPropagation();

            $.ajax({
                url: '/search',
                data: { schoolName: $("#searchField").val() },
                success: function(places) {

                    console.log(places);

                    if (!map) return;

                    for (let i=0; i<places.length; i++) {
                        addMarker(places[i]);
                    }

                    if (!$("#mapSection").hasClass('show')) {
                        $("#logoSection, #mapSection").collapse("toggle");
                    }
                }
            });
        });
        */
       
        let map;
        let mapStyles;
        let searchMarker;
        let directionsService;
        let directionsRenderer;
        let distanceMatrixService;
        let ginfoWindow;

        function loapMapStyles() {
            $.getJSON("/js/mapStyles.json", function(data) {
                mapStyles = data;
                initMap();
            });
        }

        function initMap() {
            const options = {
                zoom: 11,
                minZoom: 10,
                center: {
                    lat: 14.6091,
                    lng: 121.0223
                },
                disableDefaultUI: true,
                gestureHandling: 'greedy',
                backgroundColor: 'rgba(0, 0, 0, 0)',
                styles: mapStyles
            }

            console.log(options.styles);

            map = new google.maps.Map(document.getElementById('map'), options);

            directionsService = new google.maps.DirectionsService();
            directionsRenderer = new google.maps.DirectionsRenderer({
                suppressMarkers: true,
                polylineOptions: {
                    strokeColor: 'red'
                }
            });

            distanceMatrixService = new google.maps.DistanceMatrixService();

            ginfoWindow = new google.maps.InfoWindow();

            const input = document.getElementById('searchField');

            const autocomplete = new google.maps.places.Autocomplete(input, { 
                componentRestrictions: { 
                    country: 'ph' 
                } 
            });

            autocomplete.addListener('place_changed', function () {

                ginfoWindow.close();
                directionsRenderer.setMap(null);
                const place = this.getPlace();

                $.ajax({
                    url: '/search',
                    data: { schoolName: $("#searchField").val() },
                    success: function(places) {

                        if (!map) return;

                        for (let i=0; i<places.length; i++) {
                            addMarker(places[i]);
                        }

                        if (!$("#mapSection").hasClass('show')) {
                            $("#logoSection, #mapSection").collapse("toggle");
                        }

                        if (searchMarker) { searchMarker.setMap(null); }

                        searchMarker = new google.maps.Marker({
                            position: place.geometry.location,
                            map: map,
                            icon: 'https://i.imgur.com/RFgtRMN.png'
                        });

                        const infoWindow = new google.maps.InfoWindow({
                            content: `<p><strong>${place.name}</strong></p>` // sanitize
                        });

                        infoWindow.open(map, searchMarker);

                        searchMarker.addListener('click', function () {
                            map.panTo(searchMarker.position);
                            map.setZoom(18);
                            infoWindow.open(map, searchMarker);
                        });

                        map.panTo(place.geometry.location);
                        map.setZoom(18);
                    }
                });
            });
        }

        function addMarker(place) {

            const marker = new google.maps.Marker({
                position: { 
                    lat: place.coordinates[0],
                    lng: place.coordinates[1]
                },
                map: map,
                icon: 'https://i.imgur.com/0f9XMvH.png'
            });

            let placeType;
            switch (place.placeType) {
                case 0:
                    placeType = "Boarding House";
                    break;
                case 1:
                    placeType = "Dormitory";
                    break;
                case 2:
                    placeType = "Apartment";
                    break;
                case 3:
                    placeType = "Condominium";
                    break;
                default:
                    placeType = "RS Navi Place";
            }

            const adr = place.address;
            const address = `${adr.number} ${adr.street}, ${adr.subdivision}`
                + `<br>Bgy. ${adr.barangay}, ${adr.city}`
                + `<br>${adr.zipCode} ${adr.province}`;

            marker.addListener('click', function () {

                ginfoWindow.close();
                
                if (!marker.infoWindow) { 
                    marker.infoWindow = new google.maps.InfoWindow();
                } else {
                    ginfoWindow = marker.infoWindow;
                    ginfoWindow.open(map, marker);
                    directionsRenderer.setMap(map);
                    return directionsRenderer.setDirections(marker.directionsResult);
                }

                directionsService.route({
                    origin: marker.position,
                    destination: searchMarker.position,
                    travelMode: 'WALKING'

                }, function(result, status) {
                    console.log(status);
                    if (status !== 'OK') {
                        return alert('Directions Service request failed.');
                    }

                    marker.directionsResult = result;
                    directionsRenderer.setMap(map);
                    directionsRenderer.setDirections(result);
                });

                distanceMatrixService.getDistanceMatrix({
                    origins: [marker.position],
                    destinations: [searchMarker.position],
                    travelMode: 'WALKING'

                }, function(response, status) {

                    console.log(status);

                    if (status !== 'OK') { return alert('Failed to retrieve distance.'); }

                    const rows = response.rows;

                    for (let element of rows[0].elements) {
                        if (element.status !== 'OK') { return alert('Failed to retrieve distance 2.'); }

                        marker.infoWindow.setContent(
                            `<h5>${place.name}</strong></h5><p>${placeType}</p><p>₱ ${place.price.toLocaleString('en')}</p><p>${address}</p>` +
                            `<p>Distance: ${element.distance.text} (${element.duration.text} Walk)</p>`
                        )
                    }
                    ginfoWindow = marker.infoWindow;
                    ginfoWindow.open(map, marker);
                })
            });
        }
        
    </script>

<script async defer
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDREAoaQ27rc3JvRN_lyipAak9eT7C3tqQ&libraries=places&callback=loapMapStyles"
type="text/javascript">
</script>
</body>
</html>